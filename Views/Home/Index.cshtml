@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var no = 0;
    var orders = ViewBag.Orders as IEnumerable<Pizzadmin.Data.Order>;
    var todayOrderCount = ViewBag.TodayOrderCount ?? 0;
    var todayRevenue = ViewBag.TodayRevenue as decimal? ?? 0m;
}

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-6">
                        <h4>Orders: @todayOrderCount</h4>
                        <h4>Revenue: $@todayRevenue.ToString("F2")</h4>
                    </div>
                    <div class="col-md-6 ">
                        <form asp-action="Index">
                            <div class="date-input-group">
                                <label for="dateRange">Select Date Range</label>
                                <input type="text" id="dateRange" class="date-input" placeholder="Choose your date range..." readonly name="dateFilter">
                            </div>
                            <div class="formt-group">
                                <button class="btn btn-primary">Search</button>
                            </div>
                        </form>
                    </div>
                </div>
                
            <div class="card-body">
                <!-- Search Bar -->
                <div class="mb-3">
                    <div class="row">
                        <div class="col-md-6">
                            <input type="text" id="searchInput" class="form-control mt-2" style="min-height: 40px" placeholder="Search by order number...">
                        </div>
                        <div class="col-md-6">
                            <button id="clearSearch" class="btn btn-secondary">Clear</button>
                        </div>
                    </div>
                </div>

                <!-- Orders Table -->
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="ordersTable">
                        <thead class="text-primary">
                            <tr>
                                <th>No</th>
                                <th>Name</th>
                                <th>Total</th>
                                <th>Created at</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (orders != null && orders.Any())
                            {
                                @foreach (var p in orders)
                                {
                                    no++;
                                    <tr data-order="@p.OrderNumber.ToLower()">
                                        <td>@no</td>
                                        <td>@p.OrderNumber</td>
                                        <td>$@p.TotalPrice.ToString("F2")</td>
                                        <td>@p.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr id="noOrdersRow">
                                    <td colspan="4" class="text-center text-muted">
                                        No orders found
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination Controls -->
                <div class="d-flex justify-content-between align-items-center mt-3">
                    <div id="pageInfo" class="text-muted">
                        <small></small>
                    </div>
                    <div>
                        <button id="prevBtn" class="btn btn-outline-secondary me-2">
                            <i class="fas fa-chevron-left"></i> Previous 10
                        </button>
                        <button id="nextBtn" class="btn btn-primary">
                            Next 10 Orders <i class="fas fa-chevron-right"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
           
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            let currentPage = 1;
            const itemsPerPage = 10;
            let filteredRows = [];
            let allRows = [];

            // Initialize
            function init() {
                allRows = $('#ordersTable tbody tr:not(#noOrdersRow)').toArray();
                filteredRows = [...allRows];
                showPage(1);
                updatePaginationInfo();
            }

            // Show specific page
            function showPage(page) {
                currentPage = page;
                const startIndex = (page - 1) * itemsPerPage;
                const endIndex = startIndex + itemsPerPage;

                // Hide all rows first
                $(allRows).hide();
                $('#noOrdersRow').hide();

                if (filteredRows.length === 0) {
                    $('#noOrdersRow').show();
                } else {
                    // Show only rows for current page
                    for (let i = startIndex; i < endIndex && i < filteredRows.length; i++) {
                        $(filteredRows[i]).show();
                        // Update row number
                        $(filteredRows[i]).find('td:first').text(i + 1);
                    }
                }

                updatePaginationButtons();
                updatePaginationInfo();
            }

            // Update pagination buttons
            function updatePaginationButtons() {
                const totalPages = Math.ceil(filteredRows.length / itemsPerPage);

                $('#prevBtn').prop('disabled', currentPage === 1);
                $('#nextBtn').prop('disabled', currentPage >= totalPages);

                if (currentPage === 1) {
                    $('#prevBtn').removeClass('btn-outline-secondary').addClass('btn-secondary');
                } else {
                    $('#prevBtn').removeClass('btn-secondary').addClass('btn-outline-secondary');
                }

                if (currentPage >= totalPages) {
                    $('#nextBtn').removeClass('btn-primary').addClass('btn-secondary');
                } else {
                    $('#nextBtn').removeClass('btn-secondary').addClass('btn-primary');
                }
            }

            // Update pagination info
            function updatePaginationInfo() {
                const startIndex = (currentPage - 1) * itemsPerPage + 1;
                const endIndex = Math.min(currentPage * itemsPerPage, filteredRows.length);
                const total = filteredRows.length;

                if (total === 0) {
                    $('#pageInfo small').text('No orders to show');
                } else {
                    $('#pageInfo small').text(`Showing ${startIndex} to ${endIndex} of ${total} orders`);
                }
            }

            // Search functionality
            $('#searchInput').on('keyup', function() {
                const searchTerm = $(this).val().toLowerCase();

                if (searchTerm === '') {
                    filteredRows = [...allRows];
                } else {
                    filteredRows = allRows.filter(row => {
                        const orderNumber = $(row).data('order');
                        return orderNumber.includes(searchTerm);
                    });
                }

                showPage(1);
            });

            // Clear search
            $('#clearSearch').click(function() {
                $('#searchInput').val('');
                filteredRows = [...allRows];
                showPage(1);
            });

            // Pagination buttons
            $('#prevBtn').click(function() {
                if (currentPage > 1) {
                    showPage(currentPage - 1);
                }
            });

            $('#nextBtn').click(function() {
                const totalPages = Math.ceil(filteredRows.length / itemsPerPage);
                if (currentPage < totalPages) {
                    showPage(currentPage + 1);
                }
            });

            // Add hover effects to table rows
            $('#ordersTable tbody').on('mouseenter', 'tr', function() {
                $(this).addClass('bg-light');
            }).on('mouseleave', 'tr', function() {
                $(this).removeClass('bg-light');
            });

            // Initialize everything
            init();
        })
    </script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.13/flatpickr.min.css">
        <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>x
    <style>
        .table-hover tbody tr:hover {
            background-color: rgba(0, 123, 255, 0.1) !important;
        }

        .card {
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            border: none;
        }

        .card-header {
            background-color: #f8f9fc;
            border-bottom: 1px solid #e3e6f0;
        }

        .text-primary {
            color: #5a5c69 !important;
            font-weight: 600;
        }

        .table th {
            border-top: none;
            font-size: 0.875rem;
            text-transform: uppercase;
        }

        #prevBtn.btn-outline-secondary {
            color: #ffffff; /* visible text color */
            border-color: #f96332; /* visible border */
            background-color: #f96332; /* light background instead of transparent */
        }
    </style>
        
    <style>
            h1 {
                color: #333;
                margin-bottom: 30px;
                font-weight: 600;
                font-size: 2.2em;
            }

            .date-input-group {
                margin-bottom: 30px;
            }

            label {
                display: block;
                margin-bottom: 8px;
                color: #555;
                font-weight: 500;
                font-size: 1.1em;
            }

            .date-input {
                width: 100%;
                padding: 15px 20px;
                border: 2px solid #e0e0e0;
                border-radius: 12px;
                font-size: 16px;
                background: white;
                transition: all 0.3s ease;
                box-sizing: border-box;
            }
                .date-input:focus {
                    outline: none;
                    border-color: #667eea;
                    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
                }

            .selected-range {
                background: #f8f9ff;
                border: 2px solid #667eea;
                border-radius: 12px;
                padding: 20px;
                margin-top: 20px;
            }

                .selected-range h3 {
                    color: #333;
                    margin: 0 0 15px 0;
                    font-size: 1.3em;
                }

            .date-display {
                display: flex;
                justify-content: space-between;
                align-items: center;
                gap: 20px;
                flex-wrap: wrap;
            }

            .date-item {
                flex: 1;
                min-width: 120px;
            }

            .date-label {
                font-size: 0.9em;
                color: #666;
                margin-bottom: 5px;
            }

            .date-value {
                font-size: 1.1em;
                font-weight: 600;
                color: #333;
                padding: 8px;
                background: white;
                border-radius: 8px;
            }

            .duration {
                margin-top: 15px;
                padding: 10px;
                background: #667eea;
                color: white;
                border-radius: 8px;
                font-weight: 500;
            }

            .clear-btn {
                background: #ff6b6b;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 8px;
                cursor: pointer;
                font-size: 14px;
                margin-top: 15px;
                transition: background 0.3s ease;
            }

                .clear-btn:hover {
                    background: #ff5252;
                }

            /* Custom Flatpickr styling */
            .flatpickr-calendar {
                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
                border-radius: 12px;
                border: none;
            }

            .flatpickr-day.selected, .flatpickr-day.startRange, .flatpickr-day.endRange {
                background: #667eea;
                border-color: #667eea;
            }

            .flatpickr-day.inRange {
                background: rgba(102, 126, 234, 0.2);
                border-color: rgba(102, 126, 234, 0.3);
            }
        </style>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.13/flatpickr.min.js"></script>
        <script>
            let selectedDates = [];

            const flatpickrInstance = flatpickr("#dateRange", {
                mode: "range",
                dateFormat: "Y-m-d",
                defaultDate: "today",
                maxDate: "today",
                //showMonths: window.innerWidth > 768 ? 2 : 1,
                inline: false,
                static: false,
                monthSelectorType: "dropdown",
                yearSelectorType: "dropdown",
                onChange: function(selectedDates, dateStr, instance) {
                    handleDateChange(selectedDates, dateStr);
                },
                onReady: function(selectedDates, dateStr, instance) {
                    // Add some custom styling when ready
                    const calendar = instance.calendarContainer;
                    calendar.style.fontFamily = 'inherit';
                }
            });

            function handleDateChange(dates, dateStr) {
                selectedDates = dates;
                const selectedRangeDiv = document.getElementById('selectedRange');

                if (dates.length === 2) {
                    // Both dates selected
                    selectedRangeDiv.style.display = 'block';

                    const startDate = dates[0];
                    const endDate = dates[1];

                    // Format dates for display
                    const options = {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                        weekday: 'short'
                    };

                    document.getElementById('startDate').textContent =
                        startDate.toLocaleDateString('en-US', options);
                    document.getElementById('endDate').textContent =
                        endDate.toLocaleDateString('en-US', options);

                    // Calculate duration
                    const timeDiff = endDate - startDate;
                    const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));

                    document.getElementById('duration').textContent =
                        `Duration: ${daysDiff} day${daysDiff !== 1 ? 's' : ''}`;

                } else if (dates.length === 1) {
                    // Only start date selected
                    selectedRangeDiv.style.display = 'block';
                    document.getElementById('startDate').textContent =
                        dates[0].toLocaleDateString('en-US', {
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric',
                            weekday: 'short'
                        });
                    document.getElementById('endDate').textContent = 'Select end date...';
                    document.getElementById('duration').textContent = 'Select end date to see duration';

                } else {
                    // No dates selected
                    selectedRangeDiv.style.display = 'none';
                }
            }

            // Clear button functionality
            document.getElementById('clearBtn').addEventListener('click', function() {
                flatpickrInstance.clear();
                document.getElementById('selectedRange').style.display = 'none';
                selectedDates = [];
            });

            // Add some interactive feedback
            document.getElementById('dateRange').addEventListener('click', function() {
                this.style.borderColor = '#667eea';
            });
        </script>
}