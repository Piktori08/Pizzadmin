@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var no = 0;
    var orders = ViewBag.Orders as IEnumerable<Pizzadmin.Data.Order>;
    var todayOrderCount = ViewBag.TodayOrderCount ?? 0;
    var todayRevenue = ViewBag.TodayRevenue as decimal? ?? 0m;

    var productMax = ViewBag.MostSoldProduct as Pizzadmin.Data.Product;
    var quantityMax = ViewBag.MostSoldQuantity as int?;

    var productMin = ViewBag.LeastSoldProduct as Pizzadmin.Data.Product;
    var quantityMin = ViewBag.LeastSoldQuantity as int?;

    var viewDateFilter = ViewBag.ViewDateFilter as string;
    var deliveryCount = ViewBag.DeliveryOrdersCount as int?;
}

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-12">
                        <h4 class="d-flex align-items-center">
                            <span class="badge badge-pill badge-card d-inline-flex flex-column text-start">
                                <span class="main-info">
                                    <i class="fas fa-box text-brown"></i> Orders: @todayOrderCount
                                </span>
                                <span class="sub-info small">
                                    <i class="fas fa-truck badge-color-diff"></i> Delivery: @deliveryCount |
                                    <i class="fas fa-store badge-color-diff"></i> In-Store: @(todayOrderCount - deliveryCount)
                                </span>
                            </span>

                            <!-- Revenue Badge -->
                            <span class="badge badge-pill badge-success d-flex justify-content-center align-items-center" id="revenue-design">
                                Revenue: $@todayRevenue.ToString("F2")
                            </span>

                        </h4>
                    </div>
                </div>
                </div>
                <hr />
            <div class="card-body">
                <!-- Search Bar -->
                <div class="mb-3">
                    <form asp-action="Index">
                        <div class="row">
                            <div class="col-md-9">
                                <div class="row">
                                    <div class="col-md-6">
                                        <input type="text" id="searchInput" class="form-control mt-2" style="min-height: 40px;" placeholder="Search by order number...">
                                    </div>
                                    <div class="col-md-6">
                                        @if (viewDateFilter != null)
                                        {
                                            <input type="text" id="dateRange" class="date-input form-control mt-2" style="min-height: 40px;" value="@viewDateFilter" placeholder="Choose your date range..." readonly name="dateFilter">
                                        }
                                        else
                                        {
                                            <input type="text" id="dateRange" class="date-input form-control mt-2" style="min-height: 40px;" placeholder="Choose your date range..." readonly name="dateFilter">
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <a asp-action="Index" class="btn btn-secondary float-right ml-2"><i class="fas fa-trash"></i></a>
                                <button class="btn btn-outline-primary float-right"><i class="fas fa-search"></i></button>
                            </div>
                        </div>
                    </form>
                </div>

                <!-- Orders Table -->
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="ordersTable">
                        <thead class="text-primary">
                            <tr>
                                <th>No</th>
                                <th>Name</th>
                                <th>Total</th>
                                <th>Created at</th>
                                <th>Type</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (orders != null && orders.Any())
                            {
                                @foreach (var p in orders)
                                {
                                    no++;
                                    <tr>
                                        <td>@no</td>
                                        <td>
                                            <a asp-controller="Order" asp-action="ViewReceipt" asp-route-orderId="@p.Id" target="_blank" style="font-size: medium">@p.OrderNumber</a>
                                        </td>
                                        <td>$@p.TotalPrice.ToString("F2")</td>
                                        <td>@p.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>@(p.Type != null ? p.Type : "Not Specified")</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr id="noOrdersRow">
                                    <td colspan="4" class="text-center text-muted">
                                        No orders found
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination Controls -->
                <div class="d-flex justify-content-between align-items-center mt-3">
                    <div id="pageInfo" class="text-muted">
                        <small></small>
                    </div>
                    <div>
                        <button id="prevBtn" class="btn btn-outline-secondary me-2">
                            <i class="fas fa-chevron-left"></i> Previous 10
                        </button>
                        <button id="nextBtn" class="btn btn-primary">
                            Next 10 Orders <i class="fas fa-chevron-right"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="row">
            <div class="col-md-6">
                <div class="card h-100 product-card">
                    <div class="card-img-container position-relative">
                        @if (!string.IsNullOrEmpty(productMax?.ImageUrl))
                        {
                            <img src="@productMax?.ImageUrl" class="card-img-top" alt="@productMax?.Name" />
                        }
                        else
                        {
                            <div class="no-image-placeholder">
                                <i class="fas fa-image"></i>
                                <span>No Image</span>
                            </div>
                        }

                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@productMax?.Name <span style="color: #198754;"><i class="fa-solid fa-arrow-trend-up"></i></span></h5>
                        <p class="card-text flex-grow-1">@productMax?.Description</p>
                        <div class="mt-auto">
                            <h4 class="text-primary mb-3">$@productMax?.Price.ToString("F2") <span class="float-right" style="color: #198754;">@quantityMax sold</span></h4>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card h-100 product-card">
                    <div class="card-img-container position-relative">
                        @if (!string.IsNullOrEmpty(productMin?.ImageUrl))
                        {
                            <img src="@productMin?.ImageUrl" class="card-img-top" alt="@productMin?.Name" />
                        }
                        else
                        {
                            <div class="no-image-placeholder">
                                <i class="fas fa-image"></i>
                                <span>No Image</span>
                            </div>
                        }

                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@productMin?.Name <span class="text-danger"><i class="fa-solid fa-arrow-trend-down"></i></span></h5>
                        <p class="card-text flex-grow-1">@productMin?.Description</p>
                        <div class="mt-auto">
                            <h4 class="text-primary mb-3">$@productMin?.Price.ToString("F2") <span class="float-right text-danger">@quantityMin sold</span></h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            let currentPage = 1;
            const itemsPerPage = 10;
            let filteredRows = [];
            let allRows = [];

            // Initialize
            function init() {
                allRows = $('#ordersTable tbody tr:not(#noOrdersRow)').toArray();
                filteredRows = [...allRows];
                showPage(1);
                updatePaginationInfo();
            }

            // Show specific page
            function showPage(page) {
                currentPage = page;
                const startIndex = (page - 1) * itemsPerPage;
                const endIndex = startIndex + itemsPerPage;

                // Hide all rows first
                $(allRows).hide();
                $('#noOrdersRow').hide();

                if (filteredRows.length === 0) {
                    $('#noOrdersRow').show();
                } else {
                    // Show only rows for current page
                    for (let i = startIndex; i < endIndex && i < filteredRows.length; i++) {
                        $(filteredRows[i]).show();
                        // Update row number
                        $(filteredRows[i]).find('td:first').text(i + 1);
                    }
                }

                updatePaginationButtons();
                updatePaginationInfo();
            }

            // Update pagination buttons
            function updatePaginationButtons() {
                const totalPages = Math.ceil(filteredRows.length / itemsPerPage);

                $('#prevBtn').prop('disabled', currentPage === 1);
                $('#nextBtn').prop('disabled', currentPage >= totalPages);

                if (currentPage === 1) {
                    $('#prevBtn').removeClass('btn-outline-secondary').addClass('btn-secondary');
                } else {
                    $('#prevBtn').removeClass('btn-secondary').addClass('btn-outline-secondary');
                }

                if (currentPage >= totalPages) {
                    $('#nextBtn').removeClass('btn-primary').addClass('btn-secondary');
                } else {
                    $('#nextBtn').removeClass('btn-secondary').addClass('btn-primary');
                }
            }

            // Update pagination info
            function updatePaginationInfo() {
                const startIndex = (currentPage - 1) * itemsPerPage + 1;
                const endIndex = Math.min(currentPage * itemsPerPage, filteredRows.length);
                const total = filteredRows.length;

                if (total === 0) {
                    $('#pageInfo small').text('No orders to show');
                } else {
                    $('#pageInfo small').text(`Showing ${startIndex} to ${endIndex} of ${total} orders`);
                }
            }

            // Search functionality
            $('#searchInput').on('keyup', function() {
                const searchTerm = $(this).val().toLowerCase();

                if (searchTerm === '') {
                    filteredRows = [...allRows];
                } else {
                    filteredRows = allRows.filter(row => {
                        const orderNumber = $(row).data('order');
                        return orderNumber.includes(searchTerm);
                    });
                }

                showPage(1);
            });

            // Clear search
            $('#clearSearch').click(function() {
                $('#searchInput').val('');
                filteredRows = [...allRows];
                showPage(1);
            });

            // Pagination buttons
            $('#prevBtn').click(function() {
                if (currentPage > 1) {
                    showPage(currentPage - 1);
                }
            });

            $('#nextBtn').click(function() {
                const totalPages = Math.ceil(filteredRows.length / itemsPerPage);
                if (currentPage < totalPages) {
                    showPage(currentPage + 1);
                }
            });

            // Add hover effects to table rows
            $('#ordersTable tbody').on('mouseenter', 'tr', function() {
                $(this).addClass('bg-light');
            }).on('mouseleave', 'tr', function() {
                $(this).removeClass('bg-light');
            });

            // Initialize everything
            init();
        })
    </script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.13/flatpickr.min.css">
        <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>x
    <style>
        .table-hover tbody tr:hover {
            background-color: rgba(0, 123, 255, 0.1) !important;
        }

        .card {
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            border: none;
        }

        .card-header {
            background-color: #f8f9fc;
            border-bottom: 1px solid #e3e6f0;
        }

        .text-primary {
            color: #5a5c69 !important;
            font-weight: 600;
        }

        .table th {
            border-top: none;
            font-size: 0.875rem;
            text-transform: uppercase;
        }

        #prevBtn.btn-outline-secondary {
            color: #ffffff; /* visible text color */
            border-color: #f96332; /* visible border */
            background-color: #f96332; /* light background instead of transparent */
        }
    </style>

    <style>

        #revenue-design{
            box-sizing: border-box;
            height:70px;
            width:245px;
            text-align:center;
            border-radius: 15px;
            margin-left:2%;
            color: #198754;
            background-color: white;
            border: 2px solid #198754;
            cursor: pointer;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        #revenue-design:hover{
            color:white;
            background-color: #198754;
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(23, 162, 184, 0.2);
        }
        .badge-color-diff:hover{
            color:white!important;
        }
        .product-card {
            transition: transform 0.2s, box-shadow 0.2s;
            border: 1px solid #dee2e6;
        }

            .product-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            }

                .product-card:hover .card-actions {
                    opacity: 1;
                }

        .card-img-container {
            height: 200px;
            overflow: hidden;
        }

        .card-img-top {
            height: 100%;
            width: 100%;
            object-fit: cover;
        }

        .no-image-placeholder {
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background-color: #f8f9fa;
            color: #6c757d;
        }

            .no-image-placeholder i {
                font-size: 2rem;
                margin-bottom: 0.5rem;
            }

        .card-actions {
            opacity: 0;
            transition: opacity 0.3s ease;
            display: flex;
            gap: 5px;
            float: inline-end;
        }


            .card-actions .btn {
                width: 35px;
                height: 35px;
                padding: 0;
                display: flex;
                align-items: center;
                justify-content: center;
                border-radius: 50%;
                box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            }

                .card-actions .btn:hover {
                    transform: scale(1.1);
                }
    </style>
    <style>
        .badge-card {
            background: white;
            color: #f96332;
            border: 2px solid #f96332;
            padding: 15px 25px;
            border-radius: 15px;
            transition: all 0.3s ease;
            cursor: pointer;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

            .badge-card:hover {
                background: #f96332;
                color: white !important;
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(23, 162, 184, 0.2);
            }

            .badge-card .main-info {
                font-weight: bold;
                font-size: 18px;
                margin-bottom: 5px;
            }

            .badge-card .sub-info {
                font-size: 14px;
                opacity: 0.8;
            }
    </style>

     <style>
         h1 {
             color: #333;
             margin-bottom: 30px;
             font-weight: 600;
             font-size: 2.2em;
         }

         /* .date-input-group {
             margin-bottom: 30px;
         } */

         label {
             display: block;
             margin-bottom: 8px;
             color: #555;
             font-weight: 500;
             font-size: 1.1em;
         }

         /* .date-input {
             width: 100%;
             padding: 15px 20px;
             border: 2px solid #e0e0e0;
             border-radius: 12px;
             font-size: 16px;
             background: white;
             transition: all 0.3s ease;
             box-sizing: border-box;
         }
             .date-input:focus {
                 outline: none;
                 border-color: #667eea;
                 box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
             } */

         .selected-range {
             background: #f8f9ff;
             border: 2px solid #667eea;
             border-radius: 12px;
             padding: 20px;
             margin-top: 20px;
         }

             .selected-range h3 {
                 color: #333;
                 margin: 0 0 15px 0;
                 font-size: 1.3em;
             }

         .date-display {
             display: flex;
             justify-content: space-between;
             align-items: center;
             gap: 20px;
             flex-wrap: wrap;
         }

         .date-item {
             flex: 1;
             min-width: 120px;
         }

         .date-label {
             font-size: 0.9em;
             color: #666;
             margin-bottom: 5px;
         }

         .date-value {
             font-size: 1.1em;
             font-weight: 600;
             color: #333;
             padding: 8px;
             background: white;
             border-radius: 8px;
         }

         .duration {
             margin-top: 15px;
             padding: 10px;
             background: #667eea;
             color: white;
             border-radius: 8px;
             font-weight: 500;
         }

         .clear-btn {
             background: #ff6b6b;
             color: white;
             border: none;
             padding: 10px 20px;
             border-radius: 8px;
             cursor: pointer;
             font-size: 14px;
             margin-top: 15px;
             transition: background 0.3s ease;
         }

             .clear-btn:hover {
                 background: #ff5252;
             }

         /* Custom Flatpickr styling */
         .flatpickr-calendar {
             box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
             border-radius: 12px;
             border: none;
         }

         .flatpickr-day.selected, .flatpickr-day.startRange, .flatpickr-day.endRange {
             background: #667eea;
             border-color: #667eea;
         }

         .flatpickr-day.inRange {
             background: rgba(102, 126, 234, 0.2);
             border-color: rgba(102, 126, 234, 0.3);
         }
     </style>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.13/flatpickr.min.js"></script>
     <script>
         let selectedDates = [];

         const flatpickrInstance = flatpickr("#dateRange", {
             mode: "range",
             dateFormat: "Y-m-d",
             //defaultDate: "today",
             maxDate: "today",
             //showMonths: window.innerWidth > 768 ? 2 : 1,
             inline: false,
             static: false,
             monthSelectorType: "dropdown",
             yearSelectorType: "dropdown",
             onChange: function(selectedDates, dateStr, instance) {
                 handleDateChange(selectedDates, dateStr);
             },
             onReady: function(selectedDates, dateStr, instance) {
                 // Add some custom styling when ready
                 const calendar = instance.calendarContainer;
                 calendar.style.fontFamily = 'inherit';
             }
         });

         function handleDateChange(dates, dateStr) {
             selectedDates = dates;
             const selectedRangeDiv = document.getElementById('selectedRange');

             if (dates.length === 2) {
                 // Both dates selected
                 selectedRangeDiv.style.display = 'block';

                 const startDate = dates[0];
                 const endDate = dates[1];

                 // Format dates for display
                 const options = {
                     year: 'numeric',
                     month: 'long',
                     day: 'numeric',
                     weekday: 'short'
                 };

                 document.getElementById('startDate').textContent =
                     startDate.toLocaleDateString('en-US', options);
                 document.getElementById('endDate').textContent =
                     endDate.toLocaleDateString('en-US', options);

                 // Calculate duration
                 const timeDiff = endDate - startDate;
                 const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));

                 document.getElementById('duration').textContent =
                     `Duration: ${daysDiff} day${daysDiff !== 1 ? 's' : ''}`;

             } else if (dates.length === 1) {
                 // Only start date selected
                 selectedRangeDiv.style.display = 'block';
                 document.getElementById('startDate').textContent =
                     dates[0].toLocaleDateString('en-US', {
                         year: 'numeric',
                         month: 'long',
                         day: 'numeric',
                         weekday: 'short'
                     });
                 document.getElementById('endDate').textContent = 'Select end date...';
                 document.getElementById('duration').textContent = 'Select end date to see duration';

             } else {
                 // No dates selected
                 selectedRangeDiv.style.display = 'none';
             }
         }

         // Clear button functionality
         document.getElementById('clearBtn').addEventListener('click', function() {
             flatpickrInstance.clear();
             document.getElementById('selectedRange').style.display = 'none';
             selectedDates = [];
         });

         // Add some interactive feedback
         document.getElementById('dateRange').addEventListener('click', function() {
             this.style.borderColor = '#667eea';
         });
     </script>
}